set(TARGET add)
set(SRC_FILES add.c)

set(RUST_LIB_TARGET ${TARGET}-lib)


# XXX all Rust libraries are loaded together from the workspace
corrosion_import_crate(MANIFEST_PATH ${CMAKE_CURRENT_SOURCE_DIR}/Cargo.toml 
                        CRATES ${RUST_LIB_TARGET})

# generate Rust to C bindings
add_custom_command(
        OUTPUT  ${CMAKE_CURRENT_BINARY_DIR}/inc/lib.h
        COMMAND cbindgen ARGS --config ${CBINDGEN_TOML} --output ${CMAKE_CURRENT_BINARY_DIR}/inc/lib.h
        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
        DEPENDS ${RUST_LIB_TARGET}
        COMMENT "Generating C bindings for rust code for target ${TARGET}"
    )              

add_custom_target(${TARGET}-cbindgen DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/inc/lib.h)


add_executable(${TARGET} ${SRC_FILES})
add_dependencies(${TARGET} ${TARGET}-cbindgen)
# include path for header files generated by cbindgen
target_include_directories(${TARGET} PUBLIC ${CMAKE_CURRENT_BINARY_DIR}) 

set(ARCH x86_64-unknown-linux-gnu)

# link rust into C
# Rust library is expected to link all other libraries it uses
target_link_libraries(${TARGET} ${RUST_LIB_TARGET})

